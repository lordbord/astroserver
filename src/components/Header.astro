---
const navItems = [
    { path: '/about', label: 'about' },
    { path: '/blog', label: 'blog' },
    { path: '/music', label: 'music' },
    { path: '/projects', label: 'projects' }
];

const currentPath = Astro.url.pathname;
---

<header>
    <nav>
        <div class="nav-content">
            <a href="/" class="logo">
                <span class="cursor">></span> jordisbored.xyz
            </a>
            
            <div class="nav-links">
                {navItems.map(item => (
                    <a
                        href={item.path}
                        class:list={[
                            'nav-link',
                            currentPath === item.path && 'active'
                        ]}
                    >
                        <span class="cursor">></span>
                        {item.label}
                        <span class="scan-line"></span>
                    </a>
                ))}
            </div>

            <button class="mobile-toggle" id="menu-toggle">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
            </button>
        </div>

        <div class="mobile-menu" id="mobile-menu">
            {navItems.map(item => (
                <a
                    href={item.path}
                    class:list={[
                        'mobile-link',
                        currentPath === item.path && 'active'
                    ]}
                >
                    <span class="cursor">></span> {item.label}
                </a>
            ))}
        </div>
    </nav>
</header>

<style>
    header {
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 50;
        background: rgba(0, 0, 0, 0.8);
        backdrop-filter: blur(8px);
        border-bottom: 1px solid rgba(0, 255, 0, 0.2);
    }

    nav {
        max-width: 80rem;
        margin: 0 auto;
        padding: 1rem;
    }

    .nav-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        font-size: 1.5rem;
        font-weight: bold;
        color: var(--terminal-green);
        text-decoration: none;
        transition: color 0.2s;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .logo:hover {
        color: var(--terminal-green-dim);
    }

    .nav-links {
        display: none;
        gap: 2rem;
    }

    .nav-link {
        position: relative;
        font-size: 1.125rem;
        text-decoration: none;
        color: var(--terminal-green-dim);
        transition: all 0.2s;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.25rem 0;
        overflow: hidden;
    }

    .nav-link:hover,
    .nav-link.active {
        color: var(--terminal-green);
    }

    .nav-link .cursor {
        opacity: 0;
        transform: translateX(-0.5rem);
        transition: all 0.2s;
    }

    .nav-link:hover .cursor,
    .nav-link.active .cursor {
        opacity: 1;
        transform: translateX(0);
    }

    .scan-line {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background: linear-gradient(
            90deg,
            transparent 0%,
            var(--terminal-green) 50%,
            transparent 100%
        );
        opacity: 0;
        transform: translateX(-100%);
        transition: opacity 0.2s;
    }

    .nav-link:hover .scan-line {
        opacity: 0.5;
        animation: scan 1s linear infinite;
    }

    @keyframes scan {
        from { transform: translateX(-100%); }
        to { transform: translateX(100%); }
    }

    .cursor {
        display: inline-block;
        animation: blink 1s step-end infinite;
    }

    @keyframes blink {
        0%, 100% { opacity: 1; }
        50% { opacity: 0; }
    }

    .mobile-toggle {
        display: block;
        background: none;
        border: none;
        color: var(--terminal-green);
        cursor: pointer;
        padding: 0.5rem;
    }

    .mobile-menu {
        display: none;
        flex-direction: column;
        gap: 1rem;
        padding: 1rem 0;
    }

    .mobile-link {
        font-size: 1.125rem;
        text-decoration: none;
        color: var(--terminal-green-dim);
        transition: all 0.2s;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .mobile-link:hover,
    .mobile-link.active {
        color: var(--terminal-green);
        transform: translateX(0.5rem);
    }

    @media (min-width: 768px) {
        .nav-links {
            display: flex;
        }

        .mobile-toggle {
            display: none;
        }
    }
</style>

<script>
    const menuToggle = document.getElementById('menu-toggle');
    const mobileMenu = document.getElementById('mobile-menu');

    menuToggle?.addEventListener('click', () => {
        const isHidden = mobileMenu?.style.display === 'none' || !mobileMenu?.style.display;
        if (mobileMenu) {
            mobileMenu.style.display = isHidden ? 'flex' : 'none';
        }
    });
</script> 